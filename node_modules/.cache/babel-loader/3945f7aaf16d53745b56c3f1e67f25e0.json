{"remainingRequest":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration6\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration6\\src\\main.vue","mtime":1696499855948},{"path":"F:\\gitee\\chuangsan\\chaoxing\\babel.config.js","mtime":1696499424117},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js","mtime":1696499874028},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js","mtime":1696499870262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJGOi9naXRlZS9jaHVhbmdzYW4vY2hhb3hpbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkY6L2dpdGVlL2NodWFuZ3Nhbi9jaGFveGluZy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhdXRvUmVzaXplIGZyb20gJy4uLy4uLy4uL21peGluL2F1dG9SZXNpemUnOwppbXBvcnQgeyByYW5kb21FeHRlbmQgfSBmcm9tICcuLi8uLi8uLi91dGlsJzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZEZWNvcmF0aW9uNicsCiAgbWl4aW5zOiBbYXV0b1Jlc2l6ZV0sCiAgcHJvcHM6IHsKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgcmVjdFdpZHRoID0gNzsKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ2RlY29yYXRpb24tNicsCiAgICAgIHN2Z1dIOiBbMzAwLCAzNV0sCiAgICAgIHN2Z1NjYWxlOiBbMSwgMV0sCiAgICAgIHJvd051bTogMSwKICAgICAgcm93UG9pbnRzOiA0MCwKICAgICAgcmVjdFdpZHRoOiByZWN0V2lkdGgsCiAgICAgIGhhbGZSZWN0V2lkdGg6IHJlY3RXaWR0aCAvIDIsCiAgICAgIHBvaW50czogW10sCiAgICAgIGhlaWdodHM6IFtdLAogICAgICBtaW5IZWlnaHRzOiBbXSwKICAgICAgcmFuZG9tczogW10sCiAgICAgIGRlZmF1bHRDb2xvcjogWycjN2FjYWVjJywgJyM3YWNhZWMnXSwKICAgICAgbWVyZ2VkQ29sb3I6IFtdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbG9yOiBmdW5jdGlvbiBjb2xvcigpIHsKICAgICAgdmFyIG1lcmdlQ29sb3IgPSB0aGlzLm1lcmdlQ29sb3I7CiAgICAgIG1lcmdlQ29sb3IoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdDogZnVuY3Rpb24gYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0KCkgewogICAgICB2YXIgY2FsY1NWR0RhdGEgPSB0aGlzLmNhbGNTVkdEYXRhOwogICAgICBjYWxjU1ZHRGF0YSgpOwogICAgfSwKICAgIGNhbGNTVkdEYXRhOiBmdW5jdGlvbiBjYWxjU1ZHRGF0YSgpIHsKICAgICAgdmFyIGNhbGNQb2ludHNQb3NpdGlvbiA9IHRoaXMuY2FsY1BvaW50c1Bvc2l0aW9uLAogICAgICAgIGNhbGNTY2FsZSA9IHRoaXMuY2FsY1NjYWxlOwogICAgICBjYWxjUG9pbnRzUG9zaXRpb24oKTsKICAgICAgY2FsY1NjYWxlKCk7CiAgICB9LAogICAgY2FsY1BvaW50c1Bvc2l0aW9uOiBmdW5jdGlvbiBjYWxjUG9pbnRzUG9zaXRpb24oKSB7CiAgICAgIHZhciBzdmdXSCA9IHRoaXMuc3ZnV0gsCiAgICAgICAgcm93TnVtID0gdGhpcy5yb3dOdW0sCiAgICAgICAgcm93UG9pbnRzID0gdGhpcy5yb3dQb2ludHM7CiAgICAgIHZhciBfc3ZnV0ggPSBfc2xpY2VkVG9BcnJheShzdmdXSCwgMiksCiAgICAgICAgdyA9IF9zdmdXSFswXSwKICAgICAgICBoID0gX3N2Z1dIWzFdOwogICAgICB2YXIgaG9yaXpvbnRhbEdhcCA9IHcgLyAocm93UG9pbnRzICsgMSk7CiAgICAgIHZhciB2ZXJ0aWNhbEdhcCA9IGggLyAocm93TnVtICsgMSk7CiAgICAgIHZhciBwb2ludHMgPSBuZXcgQXJyYXkocm93TnVtKS5maWxsKDApLm1hcChmdW5jdGlvbiAoZm9vLCBpKSB7CiAgICAgICAgcmV0dXJuIG5ldyBBcnJheShyb3dQb2ludHMpLmZpbGwoMCkubWFwKGZ1bmN0aW9uIChmb28sIGopIHsKICAgICAgICAgIHJldHVybiBbaG9yaXpvbnRhbEdhcCAqIChqICsgMSksIHZlcnRpY2FsR2FwICogKGkgKyAxKV07CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICB0aGlzLnBvaW50cyA9IHBvaW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFsbCwgaXRlbSkgewogICAgICAgIHJldHVybiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGFsbCksIF90b0NvbnN1bWFibGVBcnJheShpdGVtKSk7CiAgICAgIH0sIFtdKTsKICAgICAgdmFyIGhlaWdodHMgPSB0aGlzLmhlaWdodHMgPSBuZXcgQXJyYXkocm93TnVtICogcm93UG9pbnRzKS5maWxsKDApLm1hcChmdW5jdGlvbiAoZm9vKSB7CiAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgPiAwLjggPyByYW5kb21FeHRlbmQoMC43ICogaCwgaCkgOiByYW5kb21FeHRlbmQoMC4yICogaCwgMC41ICogaCk7CiAgICAgIH0pOwogICAgICB0aGlzLm1pbkhlaWdodHMgPSBuZXcgQXJyYXkocm93TnVtICogcm93UG9pbnRzKS5maWxsKDApLm1hcChmdW5jdGlvbiAoZm9vLCBpKSB7CiAgICAgICAgcmV0dXJuIGhlaWdodHNbaV0gKiBNYXRoLnJhbmRvbSgpOwogICAgICB9KTsKICAgICAgdGhpcy5yYW5kb21zID0gbmV3IEFycmF5KHJvd051bSAqIHJvd1BvaW50cykuZmlsbCgwKS5tYXAoZnVuY3Rpb24gKGZvbykgewogICAgICAgIHJldHVybiBNYXRoLnJhbmRvbSgpICsgMS41OwogICAgICB9KTsKICAgIH0sCiAgICBjYWxjU2NhbGU6IGZ1bmN0aW9uIGNhbGNTY2FsZSgpIHsKICAgICAgdmFyIHdpZHRoID0gdGhpcy53aWR0aCwKICAgICAgICBoZWlnaHQgPSB0aGlzLmhlaWdodCwKICAgICAgICBzdmdXSCA9IHRoaXMuc3ZnV0g7CiAgICAgIHZhciBfc3ZnV0gyID0gX3NsaWNlZFRvQXJyYXkoc3ZnV0gsIDIpLAogICAgICAgIHcgPSBfc3ZnV0gyWzBdLAogICAgICAgIGggPSBfc3ZnV0gyWzFdOwogICAgICB0aGlzLnN2Z1NjYWxlID0gW3dpZHRoIC8gdywgaGVpZ2h0IC8gaF07CiAgICB9LAogICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkgewogICAgICB2YXIgY2FsY1NWR0RhdGEgPSB0aGlzLmNhbGNTVkdEYXRhOwogICAgICBjYWxjU1ZHRGF0YSgpOwogICAgfSwKICAgIG1lcmdlQ29sb3I6IGZ1bmN0aW9uIG1lcmdlQ29sb3IoKSB7CiAgICAgIHZhciBjb2xvciA9IHRoaXMuY29sb3IsCiAgICAgICAgZGVmYXVsdENvbG9yID0gdGhpcy5kZWZhdWx0Q29sb3I7CiAgICAgIHRoaXMubWVyZ2VkQ29sb3IgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb2xvciwgdHJ1ZSksIGNvbG9yIHx8IFtdKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgbWVyZ2VDb2xvciA9IHRoaXMubWVyZ2VDb2xvcjsKICAgIG1lcmdlQ29sb3IoKTsKICB9Cn07"},{"version":3,"names":["autoResize","randomExtend","deepMerge","deepClone","name","mixins","props","color","type","Array","default","_default","data","rectWidth","ref","svgWH","svgScale","rowNum","rowPoints","halfRectWidth","points","heights","minHeights","randoms","defaultColor","mergedColor","watch","mergeColor","methods","afterAutoResizeMixinInit","calcSVGData","calcPointsPosition","calcScale","_svgWH","_slicedToArray","w","h","horizontalGap","verticalGap","fill","map","foo","i","j","reduce","all","item","concat","_toConsumableArray","Math","random","width","height","_svgWH2","onResize","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/decoration6/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-6\" :ref=\"ref\">\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\n      <template\n        v-for=\"(point, i) in points\"\n      >\n        <rect\n          :key=\"i\"\n          :fill=\"mergedColor[Math.random() > 0.5 ? 0 : 1]\"\n          :x=\"point[0] - halfRectWidth\"\n          :y=\"point[1] - heights[i] / 2\"\n          :width=\"rectWidth\"\n          :height=\"heights[i]\"\n        >\n          <animate\n            attributeName=\"y\"\n            :values=\"`${point[1] - minHeights[i] / 2};${point[1] - heights[i] / 2};${point[1] - minHeights[i] / 2}`\"\n            :dur=\"`${randoms[i]}s`\"\n            keyTimes=\"0;0.5;1\"\n            calcMode=\"spline\"\n            keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"height\"\n            :values=\"`${minHeights[i]};${heights[i]};${minHeights[i]}`\"\n            :dur=\"`${randoms[i]}s`\"\n            keyTimes=\"0;0.5;1\"\n            calcMode=\"spline\"\n            keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n      </template>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { randomExtend } from '../../../util'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration6',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    const rectWidth = 7\n\n    return {\n      ref: 'decoration-6',\n\n      svgWH: [300, 35],\n\n      svgScale: [1, 1],\n\n      rowNum: 1,\n      rowPoints: 40,\n\n      rectWidth,\n      halfRectWidth: rectWidth / 2,\n\n      points: [],\n      heights: [],\n      minHeights: [],\n      randoms: [],\n\n      defaultColor: ['#7acaec', '#7acaec'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { calcPointsPosition, calcScale } = this\n\n      calcPointsPosition()\n\n      calcScale()\n    },\n    calcPointsPosition () {\n      const { svgWH, rowNum, rowPoints } = this\n\n      const [w, h] = svgWH\n\n      const horizontalGap = w / (rowPoints + 1)\n      const verticalGap = h / (rowNum + 1)\n\n      let points = new Array(rowNum).fill(0).map((foo, i) =>\n        new Array(rowPoints).fill(0).map((foo, j) => [\n          horizontalGap * (j + 1), verticalGap * (i + 1)\n        ]))\n\n      this.points = points.reduce((all, item) => [...all, ...item], [])\n      const heights = this.heights = new Array(rowNum * rowPoints)\n        .fill(0).map(foo =>\n          Math.random() > 0.8 ? randomExtend(0.7 * h, h) : randomExtend(0.2 * h, 0.5 * h))\n\n      this.minHeights = new Array(rowNum * rowPoints)\n        .fill(0).map((foo, i) => heights[i] * Math.random())\n\n      this.randoms = new Array(rowNum * rowPoints)\n        .fill(0).map(foo => Math.random() + 1.5)\n    },\n    calcScale () {\n      const { width, height, svgWH } = this\n\n      const [w, h] = svgWH\n\n      this.svgScale = [width / w, height / h]\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"mappings":"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"}]}