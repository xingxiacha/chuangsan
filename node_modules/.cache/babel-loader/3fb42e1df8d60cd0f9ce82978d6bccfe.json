{"remainingRequest":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\activeRingChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\activeRingChart\\src\\main.vue","mtime":1696499855835},{"path":"F:\\gitee\\chuangsan\\chaoxing\\babel.config.js","mtime":1696499424117},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js","mtime":1696499874028},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js","mtime":1696499870262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Charts","dvDigitalFlop","deepMerge","deepClone","name","components","props","config","type","Object","default","_default","data","defaultConfig","radius","activeRadius","value","lineWidth","activeTimeGap","color","digitalFlopStyle","fontSize","fill","digitalFlopToFixed","digitalFlopUnit","animationCurve","animationFrame","showOriginValue","mergedConfig","chart","activeIndex","animationHandler","computed","digitalFlop","map","_ref","displayValue","sum","reduce","all","v","percent","parseFloat","content","concat","number","style","toFixed","ringName","watch","mergeConfig","setRingOption","clearTimeout","methods","init","initChart","$refs","getRingOption","ringAnimation","option","setOption","getRealRadius","forEach","dataItem","series","_objectSpread","outsideLabel","show","active","arguments","length","undefined","maxRadius","Math","min","apply","_toConsumableArray","render","area","halfLineWidth","realRadius","parseInt","insideRadius","outSideRadius","_this","i","setTimeout","foo","mounted","beforeDestroy"],"sources":["node_modules/@jiaminghi/data-view/lib/components/activeRingChart/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-active-ring-chart\">\n    <div class=\"active-ring-chart-container\" ref=\"active-ring-chart\" />\n    <div class=\"active-ring-info\">\n      <dv-digital-flop :config=\"digitalFlop\" />\n      <div class=\"active-ring-name\" :style=\"fontSize\">{{ ringName }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Charts from '@jiaminghi/charts'\n\nimport dvDigitalFlop from '../../digitalFlop/src/main.vue'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvActiveRingChart',\n  components: {\n    dvDigitalFlop\n  },\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      defaultConfig: {\n        /**\n         * @description Ring radius\n         * @type {String|Number}\n         * @default radius = '50%'\n         * @example radius = '50%' | 100\n         */\n        radius: '50%',\n        /**\n         * @description Active ring radius\n         * @type {String|Number}\n         * @default activeRadius = '55%'\n         * @example activeRadius = '55%' | 110\n         */\n        activeRadius: '55%',\n        /**\n         * @description Ring data\n         * @type {Array<Object>}\n         * @default data = [{ name: '', value: 0 }]\n         */\n        data: [{ name: '', value: 0 }],\n        /**\n         * @description Ring line width\n         * @type {Number}\n         * @default lineWidth = 20\n         */\n        lineWidth: 20,\n        /**\n         * @description Active time gap (ms)\n         * @type {Number}\n         * @default activeTimeGap = 3000\n         */\n        activeTimeGap: 3000,\n        /**\n         * @description Ring color (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = [Charts Default Color]\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        color: [],\n        /**\n         * @description Digital flop style\n         * @type {Object}\n         */\n        digitalFlopStyle: {\n          fontSize: 25,\n          fill: '#fff'\n        },\n        /**\n         * @description Digital flop toFixed\n         * @type {Number}\n         */\n        digitalFlopToFixed: 0,\n        /**\n         * @description Digital flop unit\n         * @type {String}\n         */\n        digitalFlopUnit: '',\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50,\n        /**\n         * @description showOriginValue\n         * @type {Boolean}\n         * @default showOriginValue = false\n         */\n        showOriginValue: false\n      },\n\n      mergedConfig: null,\n\n      chart: null,\n\n      activeIndex: 0,\n\n      animationHandler: ''\n    }\n  },\n  computed: {\n    digitalFlop() {\n      const { mergedConfig, activeIndex } = this\n\n      if (!mergedConfig) return {}\n\n      const {\n        digitalFlopStyle,\n        digitalFlopToFixed,\n        data,\n        showOriginValue,\n        digitalFlopUnit\n      } = mergedConfig\n\n      const value = data.map(({ value }) => value)\n\n      let displayValue\n\n      if (showOriginValue) {\n        displayValue = value[activeIndex]\n      } else {\n        const sum = value.reduce((all, v) => all + v, 0)\n\n        const percent = parseFloat((value[activeIndex] / sum) * 100) || 0\n\n        displayValue = percent\n      }\n\n      return {\n        content: showOriginValue ? `{nt}${digitalFlopUnit}` : `{nt}${digitalFlopUnit || '%'}`,\n        number: [displayValue],\n        style: digitalFlopStyle,\n        toFixed: digitalFlopToFixed\n      }\n    },\n    ringName() {\n      const { mergedConfig, activeIndex } = this\n\n      if (!mergedConfig) return ''\n\n      return mergedConfig.data[activeIndex].name\n    },\n    fontSize() {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return ''\n\n      return `font-size: ${mergedConfig.digitalFlopStyle.fontSize}px;`\n    }\n  },\n  watch: {\n    config() {\n      const { animationHandler, mergeConfig, setRingOption } = this\n\n      clearTimeout(animationHandler)\n\n      this.activeIndex = 0\n\n      mergeConfig()\n\n      setRingOption()\n    }\n  },\n  methods: {\n    init() {\n      const { initChart, mergeConfig, setRingOption } = this\n\n      initChart()\n\n      mergeConfig()\n\n      setRingOption()\n    },\n    initChart() {\n      const { $refs } = this\n\n      this.chart = new Charts($refs['active-ring-chart'])\n    },\n    mergeConfig() {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(\n        deepClone(defaultConfig, true),\n        config || {}\n      )\n    },\n    setRingOption() {\n      const { getRingOption, chart, ringAnimation } = this\n\n      const option = getRingOption()\n\n      chart.setOption(option, true)\n\n      ringAnimation()\n    },\n    getRingOption() {\n      const { mergedConfig, getRealRadius } = this\n\n      const radius = getRealRadius()\n\n      mergedConfig.data.forEach(dataItem => {\n        dataItem.radius = radius\n      })\n\n      return {\n        series: [\n          {\n            type: 'pie',\n            ...mergedConfig,\n            outsideLabel: {\n              show: false\n            }\n          }\n        ],\n        color: mergedConfig.color\n      }\n    },\n    getRealRadius(active = false) {\n      const { mergedConfig, chart } = this\n\n      const { radius, activeRadius, lineWidth } = mergedConfig\n\n      const maxRadius = Math.min(...chart.render.area) / 2\n\n      const halfLineWidth = lineWidth / 2\n\n      let realRadius = active ? activeRadius : radius\n\n      if (typeof realRadius !== 'number')\n        realRadius = (parseInt(realRadius) / 100) * maxRadius\n\n      const insideRadius = realRadius - halfLineWidth\n      const outSideRadius = realRadius + halfLineWidth\n\n      return [insideRadius, outSideRadius]\n    },\n    ringAnimation() {\n      let { activeIndex, getRingOption, chart, getRealRadius } = this\n\n      const radius = getRealRadius()\n      const active = getRealRadius(true)\n\n      const option = getRingOption()\n\n      const { data } = option.series[0]\n\n      data.forEach((dataItem, i) => {\n        if (i === activeIndex) {\n          dataItem.radius = active\n        } else {\n          dataItem.radius = radius\n        }\n      })\n\n      chart.setOption(option, true)\n\n      const { activeTimeGap } = option.series[0]\n\n      this.animationHandler = setTimeout(foo => {\n        activeIndex += 1\n\n        if (activeIndex >= data.length) activeIndex = 0\n\n        this.activeIndex = activeIndex\n\n        this.ringAnimation()\n      }, activeTimeGap)\n    }\n  },\n  mounted() {\n    const { init } = this\n\n    init()\n  },\n  beforeDestroy() {\n    const { animationHandler } = this\n\n    clearTimeout(animationHandler)\n  }\n}\n</script>"],"mappings":"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"}]}