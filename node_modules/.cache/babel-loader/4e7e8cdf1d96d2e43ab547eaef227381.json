{"remainingRequest":"F:\\githubpagetest\\chaoxing\\node_modules\\babel-loader\\lib\\index.js!F:\\githubpagetest\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\githubpagetest\\chaoxing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\githubpagetest\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue","mtime":1696499855977},{"path":"F:\\githubpagetest\\chaoxing\\babel.config.js","mtime":1696499424117},{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\babel-loader\\lib\\index.js","mtime":1696499874028},{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\vue-loader\\lib\\index.js","mtime":1696499870262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["autoResize","deepMerge","deepClone","name","mixins","props","config","type","Object","default","_default","data","ref","defaultConfig","header","rowNum","headerBGC","oddRowBGC","evenRowBGC","waitTime","headerHeight","columnWidth","align","index","indexHeader","carousel","hoverPause","mergedConfig","rowsData","rows","widths","heights","avgHeight","aligns","animationIndex","animationHandler","updater","needCalc","watch","stopAnimation","calcData","methods","handleHover","enter","ri","ci","row","ceil","emitEvent","animation","afterAutoResizeMixinInit","onResize","calcWidths","calcHeights","mergeConfig","calcHeaderData","calcRowsData","calcAligns","_this$mergedConfig","length","_toConsumableArray","unshift","_this$mergedConfig2","map","i","indexTag","concat","ceils","rowIndex","rowLength","d","_objectSpread","scroll","width","usedWidth","reduce","all","w","columnNum","avgWidth","Array","fill","onresize","arguments","undefined","height","allHeight","_arguments","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$heights","start","animationNum","back","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","setTimeout","slice","push","apply","splice","stop","clearTimeout","$emit","columnIndex","updateRows","destroyed"],"sources":["node_modules/@jiaminghi/data-view/lib/components/scrollBoard/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-scroll-board\" :ref=\"ref\">\n    <div class=\"header\" v-if=\"header.length && mergedConfig\" :style=\"`background-color: ${mergedConfig.headerBGC};`\">\n      <div\n        class=\"header-item\"\n        v-for=\"(headerItem, i) in header\"\n        :key=\"`${headerItem}${i}`\"\n        :style=\"`\n          height: ${mergedConfig.headerHeight}px;\n          line-height: ${mergedConfig.headerHeight}px;\n          width: ${widths[i]}px;\n        `\"\n        :align=\"aligns[i]\"\n        v-html=\"headerItem\"\n      />\n    </div>\n\n    <div\n      v-if=\"mergedConfig\"\n      class=\"rows\"\n      :style=\"`height: ${height - (header.length ? mergedConfig.headerHeight : 0)}px;`\"\n    >\n      <div\n        class=\"row-item\"\n        v-for=\"(row, ri) in rows\"\n        :key=\"`${row.toString()}${row.scroll}`\"\n        :style=\"`\n          height: ${heights[ri]}px;\n          line-height: ${heights[ri]}px;\n          background-color: ${mergedConfig[row.rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']};\n        `\"\n      >\n        <div\n          class=\"ceil\"\n          v-for=\"(ceil, ci) in row.ceils\"\n          :key=\"`${ceil}${ri}${ci}`\"\n          :style=\"`width: ${widths[ci]}px;`\"\n          :align=\"aligns[ci]\"\n          v-html=\"ceil\"\n          @click=\"emitEvent('click', ri, ci, row, ceil)\"\n          @mouseenter=\"handleHover(true, ri, ci, row, ceil)\"\n          @mouseleave=\"handleHover(false)\"\n        />\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvScrollBoard',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'scroll-board',\n\n      defaultConfig: {\n        /**\n         * @description Board header\n         * @type {Array<String>}\n         * @default header = []\n         * @example header = ['column1', 'column2', 'column3']\n         */\n        header: [],\n        /**\n         * @description Board data\n         * @type {Array<Array>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Row num\n         * @type {Number}\n         * @default rowNum = 5\n         */\n        rowNum: 5,\n        /**\n         * @description Header background color\n         * @type {String}\n         * @default headerBGC = '#00BAFF'\n         */\n        headerBGC: '#00BAFF',\n        /**\n         * @description Odd row background color\n         * @type {String}\n         * @default oddRowBGC = '#003B51'\n         */\n        oddRowBGC: '#003B51',\n        /**\n         * @description Even row background color\n         * @type {String}\n         * @default evenRowBGC = '#003B51'\n         */\n        evenRowBGC: '#0A2732',\n        /**\n         * @description Scroll wait time\n         * @type {Number}\n         * @default waitTime = 2000\n         */\n        waitTime: 2000,\n        /**\n         * @description Header height\n         * @type {Number}\n         * @default headerHeight = 35\n         */\n        headerHeight: 35,\n        /**\n         * @description Column width\n         * @type {Array<Number>}\n         * @default columnWidth = []\n         */\n        columnWidth: [],\n        /**\n         * @description Column align\n         * @type {Array<String>}\n         * @default align = []\n         * @example align = ['left', 'center', 'right']\n         */\n        align: [],\n        /**\n         * @description Show index\n         * @type {Boolean}\n         * @default index = false\n         */\n        index: false,\n        /**\n         * @description index Header\n         * @type {String}\n         * @default indexHeader = '#'\n         */\n        indexHeader: '#',\n        /**\n         * @description Carousel type\n         * @type {String}\n         * @default carousel = 'single'\n         * @example carousel = 'single' | 'page'\n         */\n        carousel: 'single',\n        /**\n         * @description Pause scroll when mouse hovered\n         * @type {Boolean}\n         * @default hoverPause = true\n         * @example hoverPause = true | false\n         */\n        hoverPause: true\n      },\n\n      mergedConfig: null,\n\n      header: [],\n\n      rowsData: [],\n\n      rows: [],\n\n      widths: [],\n\n      heights: [],\n\n      avgHeight: 0,\n\n      aligns: [],\n\n      animationIndex: 0,\n\n      animationHandler: '',\n\n      updater: 0,\n\n      needCalc: false\n    }\n  },\n  watch: {\n    config () {\n      const { stopAnimation, calcData } = this\n\n      stopAnimation()\n\n      this.animationIndex = 0\n\n      calcData()\n    }\n  },\n  methods: {\n    handleHover(enter, ri, ci, row, ceil){\n      const { mergedConfig, emitEvent, stopAnimation, animation } = this\n\n      if (enter) emitEvent('mouseover', ri, ci, row, ceil)\n      if (!mergedConfig.hoverPause) return\n\n      if (enter) {\n        stopAnimation()\n      } else {\n        animation(true)\n      }\n    },\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { mergedConfig, calcWidths, calcHeights } = this\n\n      if (!mergedConfig) return\n\n      calcWidths()\n\n      calcHeights()\n    },\n    calcData () {\n      const { mergeConfig, calcHeaderData, calcRowsData } = this\n\n      mergeConfig()\n\n      calcHeaderData()\n\n      calcRowsData()\n\n      const { calcWidths, calcHeights, calcAligns } = this\n\n      calcWidths()\n\n      calcHeights()\n\n      calcAligns()\n\n      const { animation } = this\n\n      animation(true)\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    calcHeaderData () {\n      let { header, index, indexHeader} = this.mergedConfig\n\n      if (!header.length) {\n        this.header = []\n\n        return\n      }\n\n      header = [...header]\n\n      if (index) header.unshift(indexHeader)\n\n      this.header = header\n    },\n    calcRowsData () {\n      let { data, index, headerBGC, rowNum } = this.mergedConfig\n\n      if (index) {\n        data = data.map((row, i) => {\n          row = [...row]\n\n          const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i + 1}</span>`\n\n          row.unshift(indexTag)\n\n          return row\n        })\n      }\n\n      data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\n\n      const rowLength = data.length\n\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\n        data = [...data, ...data]\n      }\n\n      data = data.map((d, i) => ({ ...d, scroll: i }))\n\n      this.rowsData = data\n      this.rows = data\n    },\n    calcWidths () {\n      const { width, mergedConfig, rowsData } = this\n\n      const { columnWidth, header } = mergedConfig\n\n      const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\n\n      let columnNum = 0\n      if (rowsData[0]) {\n        columnNum = rowsData[0].ceils.length\n      } else if (header.length) {\n        columnNum = header.length\n      }\n\n      const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\n\n      const widths = new Array(columnNum).fill(avgWidth)\n\n      this.widths = deepMerge(widths, columnWidth)\n    },\n    calcHeights (onresize = false) {\n      const { height, mergedConfig, header } = this\n\n      const { headerHeight, rowNum, data } = mergedConfig\n\n      let allHeight = height\n\n      if (header.length) allHeight -= headerHeight\n\n      const avgHeight = allHeight / rowNum\n\n      this.avgHeight = avgHeight\n\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\n    },\n    calcAligns () {\n      const { header, mergedConfig } = this\n\n      const columnNum = header.length\n\n      let aligns = new Array(columnNum).fill('left')\n\n      const { align } = mergedConfig\n\n      this.aligns = deepMerge(aligns, align)\n    },\n    async animation (start = false) {\n      const { needCalc, calcHeights, calcRowsData } = this\n\n      if (needCalc) {\n        calcRowsData()\n        calcHeights()\n        this.needCalc = false\n      }\n\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\n\n      const { waitTime, carousel, rowNum } = mergedConfig\n\n      const rowLength = rowsData.length\n\n      if (rowNum >= rowLength) return\n\n      if (start) {\n        await new Promise(resolve => setTimeout(resolve, waitTime))\n        if (updater !== this.updater) return\n      }\n\n      const animationNum = carousel === 'single' ? 1 : rowNum\n\n      let rows = rowsData.slice(animationIndex)\n      rows.push(...rowsData.slice(0, animationIndex))\n\n      this.rows = rows.slice(0, carousel === 'page' ? rowNum * 2 : rowNum + 1)\n      this.heights = new Array(rowLength).fill(avgHeight)\n\n      await new Promise(resolve => setTimeout(resolve, 300))\n      if (updater !== this.updater) return\n\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n      animationIndex += animationNum\n\n      const back = animationIndex - rowLength\n      if (back >= 0) animationIndex = back\n\n      this.animationIndex = animationIndex\n      this.animationHandler = setTimeout(animation, waitTime - 300)\n    },\n    stopAnimation () {\n      const { animationHandler, updater } = this\n\n      this.updater = (updater + 1) % 999999\n\n      if (!animationHandler) return\n\n      clearTimeout(animationHandler)\n    },\n    emitEvent (type, ri, ci, row, ceil) {\n      const { ceils, rowIndex } = row\n\n      this.$emit(type, {\n        row: ceils,\n        ceil,\n        rowIndex,\n        columnIndex: ci\n      })\n    },\n    updateRows(rows, animationIndex) {\n      const { mergedConfig, animationHandler, animation } = this\n\n      this.mergedConfig = {\n        ...mergedConfig,\n        data: [...rows]\n      }\n\n      this.needCalc = true\n\n      if (typeof animationIndex === 'number') this.animationIndex = animationIndex\n      if (!animationHandler) animation(true)\n    }\n  },\n  destroyed () {\n    const { stopAnimation } = this\n\n    stopAnimation()\n  }\n}\n</script>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,OAAAA,UAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAJ,UAAA;EACAK,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,GAAA;MAEAC,aAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,MAAA;QACA;AACA;AACA;AACA;AACA;QACAH,IAAA;QACA;AACA;AACA;AACA;AACA;QACAI,MAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,UAAA;QACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;QACAC,YAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,KAAA;QACA;AACA;AACA;AACA;AACA;QACAC,KAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,UAAA;MACA;MAEAC,YAAA;MAEAb,MAAA;MAEAc,QAAA;MAEAC,IAAA;MAEAC,MAAA;MAEAC,OAAA;MAEAC,SAAA;MAEAC,MAAA;MAEAC,cAAA;MAEAC,gBAAA;MAEAC,OAAA;MAEAC,QAAA;IACA;EACA;EACAC,KAAA;IACAhC,MAAA,WAAAA,OAAA;MACA,IAAAiC,aAAA,QAAAA,aAAA;QAAAC,QAAA,QAAAA,QAAA;MAEAD,aAAA;MAEA,KAAAL,cAAA;MAEAM,QAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAAC,KAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,IAAA;MACA,IAAApB,YAAA,QAAAA,YAAA;QA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"}]}