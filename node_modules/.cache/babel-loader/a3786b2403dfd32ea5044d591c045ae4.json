{"remainingRequest":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\percentPond\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\percentPond\\src\\main.vue","mtime":1696499855975},{"path":"F:\\gitee\\chuangsan\\chaoxing\\babel.config.js","mtime":1696499424117},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js","mtime":1696499874028},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js","mtime":1696499870262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["uuid","deepMerge","deepClone","name","props","config","type","Object","default","_default","data","id","gradientId1","concat","gradientId2","width","height","defaultConfig","value","colors","borderWidth","borderGap","lineDash","textColor","borderRadius","localGradient","formatter","mergedConfig","computed","rectWidth","rectHeight","points","halfHeight","polylineLength","polylineWidth","linearGradient","colorNum","length","colorOffsetGap","map","c","i","polylineGradient","gradient2XPos","details","replace","watch","mergeConfig","methods","init","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","initWH","wrap","_callee$","_context","prev","next","abrupt","stop","_this2","_callee2","$nextTick","$refs","_$refs$percentPond","clientWidth","clientHeight","_callee2$","_context2","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/percentPond/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-percent-pond\" ref=\"percent-pond\">\n    <svg>\n      <defs>\n        <linearGradient :id=\"gradientId1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop v-for=\"lc in linearGradient\" :key=\"lc[0]\"\n            :offset=\"`${lc[0]}%`\"\n            :stop-color=\"lc[1]\" />\n        </linearGradient>\n\n        <linearGradient :id=\"gradientId2\" x1=\"0%\" y1=\"0%\" :x2=\"gradient2XPos\" y2=\"0%\">\n          <stop v-for=\"lc in linearGradient\" :key=\"lc[0]\"\n            :offset=\"`${lc[0]}%`\"\n            :stop-color=\"lc[1]\" />\n        </linearGradient>\n      </defs>\n      <rect\n        :x=\"mergedConfig ? mergedConfig.borderWidth / 2 : '0'\"\n        :y=\"mergedConfig ? mergedConfig.borderWidth / 2 : '0'\"\n        :rx=\"mergedConfig ? mergedConfig.borderRadius : '0'\"\n        :ry=\"mergedConfig ? mergedConfig.borderRadius : '0'\"\n        fill=\"transparent\"\n        :stroke-width=\"mergedConfig ? mergedConfig.borderWidth : '0'\"\n        :stroke=\"`url(#${gradientId1})`\"\n        :width=\"rectWidth > 0 ? rectWidth : 0\"\n        :height=\"rectHeight > 0 ? rectHeight : 0\"\n      />\n      <polyline\n        :stroke-width=\"polylineWidth\"\n        :stroke-dasharray=\"mergedConfig ? mergedConfig.lineDash.join(',') : '0'\"\n        :stroke=\"`url(#${polylineGradient})`\"\n        :points=\"points\"\n      />\n      <text\n        :stroke=\"mergedConfig ? mergedConfig.textColor : '#fff'\"\n        :fill=\"mergedConfig ? mergedConfig.textColor : '#fff'\"\n        :x=\"width / 2\"\n        :y=\"height / 2\"\n      >\n        {{ details }}\n      </text>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { uuid } from '../../../util/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvPercentPond',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      gradientId1: `percent-pond-gradientId1-${id}`,\n      gradientId2: `percent-pond-gradientId2-${id}`,\n\n      width: 0,\n      height: 0,\n\n      defaultConfig: {\n        /**\n         * @description Value\n         * @type {Number}\n         * @default value = 0\n         */\n        value: 0,\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default colors = ['#00BAFF', '#3DE7C9']\n         * @example colors = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: ['#3DE7C9', '#00BAFF'],\n        /**\n         * @description Border width\n         * @type {Number}\n         * @default borderWidth = 3\n         */\n        borderWidth: 3,\n        /**\n         * @description Gap between border and pond\n         * @type {Number}\n         * @default borderGap = 3\n         */\n        borderGap: 3,\n        /**\n         * @description Line dash\n         * @type {Array<Number>}\n         * @default lineDash = [5, 1]\n         */\n        lineDash: [5, 1],\n        /**\n         * @description Text color\n         * @type {String}\n         * @default textColor = '#fff'\n         */\n        textColor: '#fff',\n        /**\n         * @description Border radius\n         * @type {Number}\n         * @default borderRadius = 5\n         */\n        borderRadius: 5,\n        /**\n         * @description Local Gradient\n         * @type {Boolean}\n         * @default localGradient = false\n         * @example localGradient = false | true\n         */\n        localGradient: false,\n        /**\n         * @description Formatter\n         * @type {String}\n         * @default formatter = '{value}%'\n         */\n        formatter: '{value}%'\n      },\n\n      mergedConfig: null\n    }\n  },\n  computed: {\n    rectWidth () {\n      const { mergedConfig, width } = this\n\n      if (!mergedConfig) return 0\n\n      const { borderWidth } = mergedConfig\n\n      return width - borderWidth\n    },\n    rectHeight () {\n      const { mergedConfig, height } = this\n\n      if (!mergedConfig) return 0\n\n      const { borderWidth } = mergedConfig\n\n      return height - borderWidth\n    },\n    points () {\n      const { mergedConfig, width, height } = this\n\n      const halfHeight = height / 2\n\n      if (!mergedConfig) return `0, ${halfHeight} 0, ${halfHeight}`\n\n      const { borderWidth, borderGap, value } = mergedConfig\n\n      const polylineLength = (width - (borderWidth + borderGap) * 2) / 100 * value\n\n      return `\n        ${borderWidth + borderGap}, ${halfHeight}\n        ${borderWidth + borderGap + polylineLength}, ${halfHeight + 0.001}\n      `\n    },\n    polylineWidth () {\n      const { mergedConfig, height } = this\n\n      if (!mergedConfig) return 0\n\n      const { borderWidth, borderGap } = mergedConfig\n\n      return height - (borderWidth + borderGap) * 2\n    },\n    linearGradient () {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return []\n\n      const { colors } = mergedConfig\n\n      const colorNum = colors.length\n\n      const colorOffsetGap = 100 / (colorNum - 1)\n\n      return colors.map((c, i) => [colorOffsetGap * i, c])\n    },\n    polylineGradient () {\n      const { gradientId1, gradientId2, mergedConfig } = this\n\n      if (!mergedConfig) return gradientId2\n\n      if (mergedConfig.localGradient) return gradientId1\n\n      return gradientId2\n    },\n    gradient2XPos () {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return '100%'\n\n      const { value } = mergedConfig\n\n      return `${200 - value}%`\n    },\n    details () {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return ''\n\n      const { value, formatter } = mergedConfig\n\n      return formatter.replace('{value}', value)\n    }\n  },\n  watch: {\n    config () {\n      const { mergeConfig } = this\n\n      mergeConfig()\n    }\n  },\n  methods: {\n    async init () {\n      const { initWH, config, mergeConfig } = this\n\n      await initWH()\n\n      if (!config) return\n\n      mergeConfig()\n    },\n    async initWH () {\n      const { $nextTick, $refs } = this\n\n      await $nextTick()\n\n      const { clientWidth, clientHeight } = $refs['percent-pond']\n\n      this.width = clientWidth\n      this.height = clientHeight\n    },\n    mergeConfig () {\n      const { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    }\n  },\n  mounted () {\n    const { init } = this\n\n    init()\n  }\n}\n</script>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,SAAAA,IAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA,IAAAC,EAAA,GAAAX,IAAA;IACA;MACAY,WAAA,8BAAAC,MAAA,CAAAF,EAAA;MACAG,WAAA,8BAAAD,MAAA,CAAAF,EAAA;MAEAI,KAAA;MACAC,MAAA;MAEAC,aAAA;QACA;AACA;AACA;AACA;AACA;QACAC,KAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,MAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,YAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,aAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;MACA;MAEAC,YAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA,WAAAA,UAAA;MACA,IAAAF,YAAA,QAAAA,YAAA;QAAAZ,KAAA,QAAAA,KAAA;MAEA,KAAAY,YAAA;MAEA,IAAAP,WAAA,GAAAO,YAAA,CAAAP,WAAA;MAEA,OAAAL,KAAA,GAAAK,WAAA;IACA;IACAU,UAAA,WAAAA,WAAA;MACA,IAAAH,YAAA,QAAAA,YAAA;QAAAX,MAAA,QAAAA,MAAA;MAEA,KAAAW,YAAA;MAEA,IAAAP,WAAA,GAAAO,YAAA,CAAAP,WAAA;MAEA,OAAAJ,MAAA,GAAAI,WAAA;IACA;IACAW,MAAA,WAAAA,OAAA;MACA,IAAAJ,YAAA,QAAAA,YAAA;QAAAZ,KAAA,QAAAA,KAAA;QAAAC,MAAA,QAAAA,MAAA;MAEA,IAAAgB,UAAA,GAAAhB,MAAA;MAEA,KAAAW,YAAA,eAAAd,MAAA,CAAAmB,UAAA,UAAAnB,MAAA,CAAAmB,UAAA;MAEA,IAAAZ,WAAA,GAAAO,YAAA,CAAAP,WAAA;QAAAC,SAAA,GAAAM,YAAA,CAAAN,SAAA;QAAAH,KAAA,GAAAS,YAAA,CAAAT,KAAA;MAEA,IAAAe,cAAA,IAAAlB,KAAA,IAAAK,WAAA,GAAAC,SAAA,eAAAH,KAAA;MAEA,oBAAAL,MAAA,CACAO,WAAA,GAAAC,SAAA,QAAAR,MAAA,CAAAmB,UAAA,gBAAAnB,MAAA,CACAO,WAAA,GAAAC,SAAA,GAAAY,cAAA,QAAApB,MAAA,CAAAmB,UAAA;IAEA;IACAE,aAAA,WAAAA,cAAA;MACA,IAAAP,YAAA,QAAAA,YAAA;QAAAX,MAAA,QAAAA,MAAA;MAEA,KAAAW,YAAA;MAEA,IAAAP,WAAA,GAAAO,YAAA,CAAAP,WAAA;QAAAC,SAAA,GAAAM,YAAA,CAAAN,SAAA;MAEA,OAAAL,MAAA,IAAAI,WAAA,GAAAC,SAAA;IACA;IACAc,cAAA,WAAAA,eAAA;MACA,IAAAR,YAAA,QAAAA,YAAA;MAEA,KAAAA,YAAA;MAEA,IAAAR,MAAA,GAAAQ,YAAA,CAAAR,MAAA;MAEA,IAAAiB,QAAA,GAAAjB,MAAA,CAAAkB,MAAA;MAEA,IAAAC,cAAA,UAAAF,QAAA;MAEA,OAAAjB,MAAA,CAAAoB,GAAA,WAAAC,CAAA,EAAAC,CAAA;QAAA,QAAAH,cAAA,GAAAG,CAAA,EAAAD,CAAA;MAAA;IACA;IACAE,gBAAA,WAAAA,iBAAA;MACA,IAAA9B,WAAA,QAAAA,WAAA;QAAAE,WAAA,QAAAA,WAAA;QAAAa,YAAA,QAAAA,YAAA;MAEA,KAAAA,YAAA,SAAAb,WAAA;MAEA,IAAAa,YAAA,CAAAF,aAAA,SAAAb,WAAA;MAEA,OAAAE,WAAA;IACA;IACA6B,aAAA,WAAAA,cAAA;MACA,IAAAhB,YAAA,QAAAA,YAAA;MAEA,KAAAA,YAAA;MAEA,IAAAT,KAAA,GAAAS,YAAA,CAAAT,KAAA;MAEA,UAAAL,MAAA,OAAAK,KAAA;IACA;IACA0B,OAAA,WAAAA,QAAA;MACA,IAAAjB,YAAA,QAAAA,YAAA;MAEA,KAAAA,YAAA;MAEA,IAAAT,KAAA,GAAAS,YAAA,CAAAT,KAAA;QAAAQ,SAAA,GAAAC,YAAA,CAAAD,SAAA;MAEA,OAAAA,SAAA,CAAAmB,OAAA,YAAA3B,KAAA;IACA;EACA;EACA4B,KAAA;IACAzC,MAAA,WAAAA,OAAA;MACA,IAAA0C,WAAA,QAAAA,WAAA;MAEAA,WAAA;IACA;EACA;EACAC,OAAA;IACAC,IAAA,WAAAA,KAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAlD,MAAA,EAAA0C,WAAA;QAAA,OAAAK,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAL,MAAA,GAAAL,KAAA,CAAAK,MAAA,EAAAlD,MAAA,GAAA6C,KAAA,CAAA7C,MAAA,EAAA0C,WAAA,GAAAG,KAAA,CAAAH,WAAA;cAAAW,QAAA,CAAAE,IAAA;cAAA,OAEAL,MAAA;YAAA;cAAA,IAEAlD,MAAA;gBAAAqD,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cAEAd,WAAA;YAAA;YAAA;cAAA,OAAAW,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAR,OAAA;MAAA;IACA;IACAC,MAAA,WAAAA,OAAA;MAAA,IAAAQ,MAAA;MAAA,OAAAZ,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAW,SAAA;QAAA,IAAAC,SAAA,EAAAC,KAAA,EAAAC,kBAAA,EAAAC,WAAA,EAAAC,YAAA;QAAA,OAAAjB,mBAAA,GAAAI,IAAA,UAAAc,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAZ,IAAA,GAAAY,SAAA,CAAAX,IAAA;YAAA;cACAK,SAAA,GAAAF,MAAA,CAAAE,SAAA,EAAAC,KAAA,GAAAH,MAAA,CAAAG,KAAA;cAAAK,SAAA,CAAAX,IAAA;cAAA,OAEAK,SAAA;YAAA;cAAAE,kBAAA,GAEAD,KAAA,kBAAAE,WAAA,GAAAD,kBAAA,CAAAC,WAAA,EAAAC,YAAA,GAAAF,kBAAA,CAAAE,YAAA;cAEAN,MAAA,CAAAhD,KAAA,GAAAqD,WAAA;cACAL,MAAA,CAAA/C,MAAA,GAAAqD,YAAA;YAAA;YAAA;cAAA,OAAAE,SAAA,CAAAT,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IACA;IACAjB,WAAA,WAAAA,YAAA;MACA,IAAA1C,MAAA,QAAAA,MAAA;QAAAY,aAAA,QAAAA,aAAA;MAEA,KAAAU,YAAA,GAAA1B,SAAA,CAAAC,SAAA,CAAAe,aAAA,SAAAZ,MAAA;IACA;EACA;EACAmE,OAAA,WAAAA,QAAA;IACA,IAAAvB,IAAA,QAAAA,IAAA;IAEAA,IAAA;EACA;AACA"}]}