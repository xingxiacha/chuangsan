{"remainingRequest":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\digitalFlop\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\digitalFlop\\src\\main.vue","mtime":1696499855961},{"path":"F:\\gitee\\chuangsan\\chaoxing\\babel.config.js","mtime":1696499424117},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js","mtime":1696499874028},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js","mtime":1696499870262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkY6L2dpdGVlL2NodWFuZ3Nhbi9jaGFveGluZy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCgppbXBvcnQgQ1JlbmRlciBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyJzsKaW1wb3J0ICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvZXh0ZW5kL2luZGV4JzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZEaWdpdGFsRmxvcCcsCiAgcHJvcHM6IHsKICAgIGNvbmZpZzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlbmRlcmVyOiBudWxsLAogICAgICBkZWZhdWx0Q29uZmlnOiB7CiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIE51bWJlciBmb3IgZGlnaXRhbCBmbG9wCiAgICAgICAgICogQHR5cGUge0FycmF5PE51bWJlcj59CiAgICAgICAgICogQGRlZmF1bHQgbnVtYmVyID0gW10KICAgICAgICAgKiBAZXhhbXBsZSBudW1iZXIgPSBbMTBdCiAgICAgICAgICovCiAgICAgICAgbnVtYmVyOiBbXSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ29udGVudCBmb3JtYXR0ZXIKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGNvbnRlbnQgPSAnJwogICAgICAgICAqIEBleGFtcGxlIGNvbnRlbnQgPSAne250feS4qicKICAgICAgICAgKi8KICAgICAgICBjb250ZW50OiAnJywKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gTnVtYmVyIHRvRml4ZWQKICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAqIEBkZWZhdWx0IHRvRml4ZWQgPSAwCiAgICAgICAgICovCiAgICAgICAgdG9GaXhlZDogMCwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gVGV4dCBhbGlnbgogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgdGV4dEFsaWduID0gJ2NlbnRlcicKICAgICAgICAgKiBAZXhhbXBsZSB0ZXh0QWxpZ24gPSAnY2VudGVyJyB8ICdsZWZ0JyB8ICdyaWdodCcKICAgICAgICAgKi8KICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiByb3dHYXAKICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICBAZGVmYXVsdCByb3dHYXAgPSAwCiAgICAgICAgICovCiAgICAgICAgcm93R2FwOiAwLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBUZXh0IHN0eWxlIGNvbmZpZ3VyYXRpb24KICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fSB7Q1JlbmRlciBDbGFzcyBTdHlsZX0KICAgICAgICAgKi8KICAgICAgICBzdHlsZTogewogICAgICAgICAgZm9udFNpemU6IDMwLAogICAgICAgICAgZmlsbDogJyMzZGU3YzknCiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gTnVtYmVyIGZvcm1hdHRlcgogICAgICAgICAqIEB0eXBlIHtOdWxsfEZ1bmN0aW9ufQogICAgICAgICAqLwogICAgICAgIGZvcm1hdHRlcjogdW5kZWZpbmVkLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDUmVuZGVyIGFuaW1hdGlvbkN1cnZlCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCBhbmltYXRpb25DdXJ2ZSA9ICdlYXNlT3V0Q3ViaWMnCiAgICAgICAgICovCiAgICAgICAgYW5pbWF0aW9uQ3VydmU6ICdlYXNlT3V0Q3ViaWMnLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDUmVuZGVyIGFuaW1hdGlvbkZyYW1lCiAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgKiBAZGVmYXVsdCBhbmltYXRpb25GcmFtZSA9IDUwCiAgICAgICAgICovCiAgICAgICAgYW5pbWF0aW9uRnJhbWU6IDUwCiAgICAgIH0sCiAgICAgIG1lcmdlZENvbmZpZzogbnVsbCwKICAgICAgZ3JhcGg6IG51bGwKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29uZmlnOiBmdW5jdGlvbiBjb25maWcoKSB7CiAgICAgIHZhciB1cGRhdGUgPSB0aGlzLnVwZGF0ZTsKICAgICAgdXBkYXRlKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICB2YXIgaW5pdFJlbmRlciA9IHRoaXMuaW5pdFJlbmRlciwKICAgICAgICBtZXJnZUNvbmZpZyA9IHRoaXMubWVyZ2VDb25maWcsCiAgICAgICAgaW5pdEdyYXBoID0gdGhpcy5pbml0R3JhcGg7CiAgICAgIGluaXRSZW5kZXIoKTsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgICAgaW5pdEdyYXBoKCk7CiAgICB9LAogICAgaW5pdFJlbmRlcjogZnVuY3Rpb24gaW5pdFJlbmRlcigpIHsKICAgICAgdmFyICRyZWZzID0gdGhpcy4kcmVmczsKICAgICAgdGhpcy5yZW5kZXJlciA9IG5ldyBDUmVuZGVyKCRyZWZzWydkaWdpdGFsLWZsb3AnXSk7CiAgICB9LAogICAgbWVyZ2VDb25maWc6IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKCkgewogICAgICB2YXIgZGVmYXVsdENvbmZpZyA9IHRoaXMuZGVmYXVsdENvbmZpZywKICAgICAgICBjb25maWcgPSB0aGlzLmNvbmZpZzsKICAgICAgdGhpcy5tZXJnZWRDb25maWcgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb25maWcsIHRydWUpLCBjb25maWcgfHwge30pOwogICAgfSwKICAgIGluaXRHcmFwaDogZnVuY3Rpb24gaW5pdEdyYXBoKCkgewogICAgICB2YXIgZ2V0U2hhcGUgPSB0aGlzLmdldFNoYXBlLAogICAgICAgIGdldFN0eWxlID0gdGhpcy5nZXRTdHlsZSwKICAgICAgICByZW5kZXJlciA9IHRoaXMucmVuZGVyZXIsCiAgICAgICAgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWc7CiAgICAgIHZhciBhbmltYXRpb25DdXJ2ZSA9IG1lcmdlZENvbmZpZy5hbmltYXRpb25DdXJ2ZSwKICAgICAgICBhbmltYXRpb25GcmFtZSA9IG1lcmdlZENvbmZpZy5hbmltYXRpb25GcmFtZTsKICAgICAgdmFyIHNoYXBlID0gZ2V0U2hhcGUoKTsKICAgICAgdmFyIHN0eWxlID0gZ2V0U3R5bGUoKTsKICAgICAgdGhpcy5ncmFwaCA9IHJlbmRlcmVyLmFkZCh7CiAgICAgICAgbmFtZTogJ251bWJlclRleHQnLAogICAgICAgIGFuaW1hdGlvbkN1cnZlOiBhbmltYXRpb25DdXJ2ZSwKICAgICAgICBhbmltYXRpb25GcmFtZTogYW5pbWF0aW9uRnJhbWUsCiAgICAgICAgc2hhcGU6IHNoYXBlLAogICAgICAgIHN0eWxlOiBzdHlsZQogICAgICB9KTsKICAgIH0sCiAgICBnZXRTaGFwZTogZnVuY3Rpb24gZ2V0U2hhcGUoKSB7CiAgICAgIHZhciBfdGhpcyRtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZywKICAgICAgICBudW1iZXIgPSBfdGhpcyRtZXJnZWRDb25maWcubnVtYmVyLAogICAgICAgIGNvbnRlbnQgPSBfdGhpcyRtZXJnZWRDb25maWcuY29udGVudCwKICAgICAgICB0b0ZpeGVkID0gX3RoaXMkbWVyZ2VkQ29uZmlnLnRvRml4ZWQsCiAgICAgICAgdGV4dEFsaWduID0gX3RoaXMkbWVyZ2VkQ29uZmlnLnRleHRBbGlnbiwKICAgICAgICByb3dHYXAgPSBfdGhpcyRtZXJnZWRDb25maWcucm93R2FwLAogICAgICAgIGZvcm1hdHRlciA9IF90aGlzJG1lcmdlZENvbmZpZy5mb3JtYXR0ZXI7CiAgICAgIHZhciBfdGhpcyRyZW5kZXJlciRhcmVhID0gX3NsaWNlZFRvQXJyYXkodGhpcy5yZW5kZXJlci5hcmVhLCAyKSwKICAgICAgICB3ID0gX3RoaXMkcmVuZGVyZXIkYXJlYVswXSwKICAgICAgICBoID0gX3RoaXMkcmVuZGVyZXIkYXJlYVsxXTsKICAgICAgdmFyIHBvc2l0aW9uID0gW3cgLyAyLCBoIC8gMl07CiAgICAgIGlmICh0ZXh0QWxpZ24gPT09ICdsZWZ0JykgcG9zaXRpb25bMF0gPSAwOwogICAgICBpZiAodGV4dEFsaWduID09PSAncmlnaHQnKSBwb3NpdGlvblswXSA9IHc7CiAgICAgIHJldHVybiB7CiAgICAgICAgbnVtYmVyOiBudW1iZXIsCiAgICAgICAgY29udGVudDogY29udGVudCwKICAgICAgICB0b0ZpeGVkOiB0b0ZpeGVkLAogICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbiwKICAgICAgICByb3dHYXA6IHJvd0dhcCwKICAgICAgICBmb3JtYXR0ZXI6IGZvcm1hdHRlcgogICAgICB9OwogICAgfSwKICAgIGdldFN0eWxlOiBmdW5jdGlvbiBnZXRTdHlsZSgpIHsKICAgICAgdmFyIF90aGlzJG1lcmdlZENvbmZpZzIgPSB0aGlzLm1lcmdlZENvbmZpZywKICAgICAgICBzdHlsZSA9IF90aGlzJG1lcmdlZENvbmZpZzIuc3R5bGUsCiAgICAgICAgdGV4dEFsaWduID0gX3RoaXMkbWVyZ2VkQ29uZmlnMi50ZXh0QWxpZ247CiAgICAgIHJldHVybiBkZWVwTWVyZ2Uoc3R5bGUsIHsKICAgICAgICB0ZXh0QWxpZ246IHRleHRBbGlnbiwKICAgICAgICB0ZXh0QmFzZWxpbmU6ICdtaWRkbGUnCiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgbWVyZ2VDb25maWcgPSB0aGlzLm1lcmdlQ29uZmlnLAogICAgICAgIG1lcmdlU2hhcGUgPSB0aGlzLm1lcmdlU2hhcGUsCiAgICAgICAgZ2V0U2hhcGUgPSB0aGlzLmdldFNoYXBlLAogICAgICAgIGdldFN0eWxlID0gdGhpcy5nZXRTdHlsZSwKICAgICAgICBncmFwaCA9IHRoaXMuZ3JhcGgsCiAgICAgICAgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWc7CiAgICAgIGdyYXBoLmFuaW1hdGlvbkVuZCgpOwogICAgICBtZXJnZUNvbmZpZygpOwogICAgICBpZiAoIWdyYXBoKSByZXR1cm47CiAgICAgIHZhciBhbmltYXRpb25DdXJ2ZSA9IG1lcmdlZENvbmZpZy5hbmltYXRpb25DdXJ2ZSwKICAgICAgICBhbmltYXRpb25GcmFtZSA9IG1lcmdlZENvbmZpZy5hbmltYXRpb25GcmFtZTsKICAgICAgdmFyIHNoYXBlID0gZ2V0U2hhcGUoKTsKICAgICAgdmFyIHN0eWxlID0gZ2V0U3R5bGUoKTsKICAgICAgbWVyZ2VTaGFwZShncmFwaCwgc2hhcGUpOwogICAgICBncmFwaC5hbmltYXRpb25DdXJ2ZSA9IGFuaW1hdGlvbkN1cnZlOwogICAgICBncmFwaC5hbmltYXRpb25GcmFtZSA9IGFuaW1hdGlvbkZyYW1lOwogICAgICBncmFwaC5hbmltYXRpb24oJ3N0eWxlJywgc3R5bGUsIHRydWUpOwogICAgICBncmFwaC5hbmltYXRpb24oJ3NoYXBlJywgc2hhcGUpOwogICAgfSwKICAgIG1lcmdlU2hhcGU6IGZ1bmN0aW9uIG1lcmdlU2hhcGUoZ3JhcGgsIHNoYXBlKSB7CiAgICAgIHZhciBjYWNoZU51bSA9IGdyYXBoLnNoYXBlLm51bWJlci5sZW5ndGg7CiAgICAgIHZhciBzaGFwZU51bSA9IHNoYXBlLm51bWJlci5sZW5ndGg7CiAgICAgIGlmIChjYWNoZU51bSAhPT0gc2hhcGVOdW0pIGdyYXBoLnNoYXBlLm51bWJlciA9IHNoYXBlLm51bWJlcjsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgaW5pdCA9IHRoaXMuaW5pdDsKICAgIGluaXQoKTsKICB9Cn07"},{"version":3,"names":["CRender","deepMerge","deepClone","name","props","config","type","Object","default","_default","data","renderer","defaultConfig","number","content","toFixed","textAlign","rowGap","style","fontSize","fill","formatter","undefined","animationCurve","animationFrame","mergedConfig","graph","watch","update","methods","init","initRender","mergeConfig","initGraph","$refs","getShape","getStyle","shape","add","_this$mergedConfig","_this$renderer$area","_slicedToArray","area","w","h","position","_this$mergedConfig2","textBaseline","mergeShape","animationEnd","animation","cacheNum","length","shapeNum","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-digital-flop\">\n    <canvas ref=\"digital-flop\" />\n  </div>\n</template>\n\n<script>\nimport CRender from '@jiaminghi/c-render'\n\nimport '@jiaminghi/charts/lib/extend/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDigitalFlop',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      renderer: null,\n\n      defaultConfig: {\n        /**\n         * @description Number for digital flop\n         * @type {Array<Number>}\n         * @default number = []\n         * @example number = [10]\n         */\n        number: [],\n        /**\n         * @description Content formatter\n         * @type {String}\n         * @default content = ''\n         * @example content = '{nt}个'\n         */\n        content: '',\n        /**\n         * @description Number toFixed\n         * @type {Number}\n         * @default toFixed = 0\n         */\n        toFixed: 0,\n        /**\n         * @description Text align\n         * @type {String}\n         * @default textAlign = 'center'\n         * @example textAlign = 'center' | 'left' | 'right'\n         */\n        textAlign: 'center',\n        /**\n         * @description rowGap\n         * @type {Number}\n         @default rowGap = 0\n         */\n        rowGap: 0,\n        /**\n         * @description Text style configuration\n         * @type {Object} {CRender Class Style}\n         */\n        style: {\n          fontSize: 30,\n          fill: '#3de7c9'\n        },\n        /**\n         * @description Number formatter\n         * @type {Null|Function}\n         */\n        formatter: undefined,\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50\n      },\n\n      mergedConfig: null,\n\n      graph: null\n    }\n  },\n  watch: {\n    config () {\n      const { update } = this\n\n      update()\n    }\n  },\n  methods: {\n    init () {\n      const { initRender, mergeConfig, initGraph } = this\n\n      initRender()\n\n      mergeConfig()\n\n      initGraph()\n    },\n    initRender () {\n      const { $refs } = this\n\n      this.renderer = new CRender($refs['digital-flop'])\n    },\n    mergeConfig () {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    initGraph () {\n      const { getShape, getStyle, renderer, mergedConfig } = this\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      this.graph = renderer.add({\n        name: 'numberText',\n        animationCurve,\n        animationFrame,\n        shape,\n        style\n      })\n    },\n    getShape () {\n      const { number, content, toFixed, textAlign, rowGap, formatter } = this.mergedConfig\n\n      const [w, h] = this.renderer.area\n\n      const position = [w / 2, h / 2]\n\n      if (textAlign === 'left') position[0] = 0\n      if (textAlign === 'right') position[0] = w\n\n      return {\n        number,\n        content,\n        toFixed,\n        position,\n        rowGap,\n        formatter\n      }\n    },\n    getStyle () {\n      const { style, textAlign } = this.mergedConfig\n\n      return deepMerge(style, {\n        textAlign,\n        textBaseline: 'middle'\n      })\n    },\n    update () {\n      const { mergeConfig, mergeShape, getShape, getStyle, graph, mergedConfig } = this\n\n      graph.animationEnd()\n\n      mergeConfig()\n\n      if (!graph) return\n\n      const { animationCurve, animationFrame } = mergedConfig\n\n      const shape = getShape()\n      const style = getStyle()\n\n      mergeShape(graph, shape)\n\n      graph.animationCurve = animationCurve\n      graph.animationFrame = animationFrame\n\n      graph.animation('style', style, true)\n      graph.animation('shape', shape)\n    },\n    mergeShape (graph, shape) {\n      const cacheNum = graph.shape.number.length\n      const shapeNum = shape.number.length\n\n      if (cacheNum !== shapeNum) graph.shape.number = shape.number\n    }\n  },\n  mounted () {\n    const { init } = this\n\n    init()\n  }\n}\n</script>"],"mappings":"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"}]}