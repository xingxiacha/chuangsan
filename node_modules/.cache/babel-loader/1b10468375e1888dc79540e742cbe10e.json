{"remainingRequest":"F:\\githubpagetest\\chaoxing\\node_modules\\babel-loader\\lib\\index.js!F:\\githubpagetest\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\githubpagetest\\chaoxing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\githubpagetest\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\conicalColumnChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\conicalColumnChart\\src\\main.vue","mtime":1696499855901},{"path":"F:\\githubpagetest\\chaoxing\\babel.config.js","mtime":1696499424117},{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\babel-loader\\lib\\index.js","mtime":1696499874028},{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\githubpagetest\\chaoxing\\node_modules\\vue-loader\\lib\\index.js","mtime":1696499870262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRjovZ2l0aHVicGFnZXRlc3QvY2hhb3hpbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhdXRvUmVzaXplIGZyb20gJy4uLy4uLy4uL21peGluL2F1dG9SZXNpemUnOwppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCc7CmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEdkNvbmljYWxDb2x1bW5DaGFydCcsCiAgbWl4aW5zOiBbYXV0b1Jlc2l6ZV0sCiAgcHJvcHM6IHsKICAgIGNvbmZpZzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ2NvbmljYWwtY29sdW1uLWNoYXJ0JywKICAgICAgZGVmYXVsdENvbmZpZzogewogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDaGFydCBkYXRhCiAgICAgICAgICogQHR5cGUge0FycmF5PE9iamVjdD59CiAgICAgICAgICogQGRlZmF1bHQgZGF0YSA9IFtdCiAgICAgICAgICovCiAgICAgICAgZGF0YTogW10sCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENoYXJ0IGltZwogICAgICAgICAqIEB0eXBlIHtBcnJheTxTdHJpbmc+fQogICAgICAgICAqIEBkZWZhdWx0IGltZyA9IFtdCiAgICAgICAgICovCiAgICAgICAgaW1nOiBbXSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ2hhcnQgZm9udCBzaXplCiAgICAgICAgICogQHR5cGUge051bWJlcn0KICAgICAgICAgKiBAZGVmYXVsdCBmb250U2l6ZSA9IDEyCiAgICAgICAgICovCiAgICAgICAgZm9udFNpemU6IDEyLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBJbWcgc2lkZSBsZW5ndGgKICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQogICAgICAgICAqIEBkZWZhdWx0IGltZ1NpZGVMZW5ndGggPSAzMAogICAgICAgICAqLwogICAgICAgIGltZ1NpZGVMZW5ndGg6IDMwLAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDb2x1bW4gY29sb3IKICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQogICAgICAgICAqIEBkZWZhdWx0IGNvbHVtbkNvbG9yID0gJ3JnYmEoMCwgMTk0LCAyNTUsIDAuNCknCiAgICAgICAgICovCiAgICAgICAgY29sdW1uQ29sb3I6ICdyZ2JhKDAsIDE5NCwgMjU1LCAwLjQpJywKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gVGV4dCBjb2xvcgogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgdGV4dENvbG9yID0gJyNmZmYnCiAgICAgICAgICovCiAgICAgICAgdGV4dENvbG9yOiAnI2ZmZicsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFNob3cgdmFsdWUKICAgICAgICAgKiBAdHlwZSB7Qm9vbGVhbn0KICAgICAgICAgKiBAZGVmYXVsdCBzaG93VmFsdWUgPSBmYWxzZQogICAgICAgICAqLwogICAgICAgIHNob3dWYWx1ZTogZmFsc2UKICAgICAgfSwKICAgICAgbWVyZ2VkQ29uZmlnOiBudWxsLAogICAgICBjb2x1bW46IFtdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbmZpZzogZnVuY3Rpb24gY29uZmlnKCkgewogICAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgICBjYWxjRGF0YSgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0OiBmdW5jdGlvbiBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQoKSB7CiAgICAgIHZhciBjYWxjRGF0YSA9IHRoaXMuY2FsY0RhdGE7CiAgICAgIGNhbGNEYXRhKCk7CiAgICB9LAogICAgb25SZXNpemU6IGZ1bmN0aW9uIG9uUmVzaXplKCkgewogICAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgICBjYWxjRGF0YSgpOwogICAgfSwKICAgIGNhbGNEYXRhOiBmdW5jdGlvbiBjYWxjRGF0YSgpIHsKICAgICAgdmFyIG1lcmdlQ29uZmlnID0gdGhpcy5tZXJnZUNvbmZpZywKICAgICAgICBpbml0RGF0YSA9IHRoaXMuaW5pdERhdGEsCiAgICAgICAgY2FsY1NWR1BhdGggPSB0aGlzLmNhbGNTVkdQYXRoOwogICAgICBtZXJnZUNvbmZpZygpOwogICAgICBpbml0RGF0YSgpOwogICAgICBjYWxjU1ZHUGF0aCgpOwogICAgfSwKICAgIG1lcmdlQ29uZmlnOiBmdW5jdGlvbiBtZXJnZUNvbmZpZygpIHsKICAgICAgdmFyIGRlZmF1bHRDb25maWcgPSB0aGlzLmRlZmF1bHRDb25maWcsCiAgICAgICAgY29uZmlnID0gdGhpcy5jb25maWc7CiAgICAgIHRoaXMubWVyZ2VkQ29uZmlnID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29uZmlnLCB0cnVlKSwgY29uZmlnIHx8IHt9KTsKICAgIH0sCiAgICBpbml0RGF0YTogZnVuY3Rpb24gaW5pdERhdGEoKSB7CiAgICAgIHZhciBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZzsKICAgICAgdmFyIGRhdGEgPSBtZXJnZWRDb25maWcuZGF0YTsKICAgICAgZGF0YSA9IGRlZXBDbG9uZShkYXRhLCB0cnVlKTsKICAgICAgZGF0YS5zb3J0KGZ1bmN0aW9uIChfcmVmLCBfcmVmMikgewogICAgICAgIHZhciBhID0gX3JlZi52YWx1ZTsKICAgICAgICB2YXIgYiA9IF9yZWYyLnZhbHVlOwogICAgICAgIGlmIChhID4gYikgcmV0dXJuIC0xOwogICAgICAgIGlmIChhIDwgYikgcmV0dXJuIDE7CiAgICAgICAgaWYgKGEgPT09IGIpIHJldHVybiAwOwogICAgICB9KTsKICAgICAgdmFyIG1heCA9IGRhdGFbMF0gPyBkYXRhWzBdLnZhbHVlIDogMTA7CiAgICAgIGRhdGEgPSBkYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGl0ZW0pLCB7fSwgewogICAgICAgICAgcGVyY2VudDogaXRlbS52YWx1ZSAvIG1heAogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgbWVyZ2VkQ29uZmlnLmRhdGEgPSBkYXRhOwogICAgfSwKICAgIGNhbGNTVkdQYXRoOiBmdW5jdGlvbiBjYWxjU1ZHUGF0aCgpIHsKICAgICAgdmFyIG1lcmdlZENvbmZpZyA9IHRoaXMubWVyZ2VkQ29uZmlnLAogICAgICAgIHdpZHRoID0gdGhpcy53aWR0aCwKICAgICAgICBoZWlnaHQgPSB0aGlzLmhlaWdodDsKICAgICAgdmFyIGltZ1NpZGVMZW5ndGggPSBtZXJnZWRDb25maWcuaW1nU2lkZUxlbmd0aCwKICAgICAgICBmb250U2l6ZSA9IG1lcmdlZENvbmZpZy5mb250U2l6ZSwKICAgICAgICBkYXRhID0gbWVyZ2VkQ29uZmlnLmRhdGE7CiAgICAgIHZhciBpdGVtTnVtID0gZGF0YS5sZW5ndGg7CiAgICAgIHZhciBnYXAgPSB3aWR0aCAvIChpdGVtTnVtICsgMSk7CiAgICAgIHZhciB1c2VBYmxlSGVpZ2h0ID0gaGVpZ2h0IC0gaW1nU2lkZUxlbmd0aCAtIGZvbnRTaXplIC0gNTsKICAgICAgdmFyIHN2Z0JvdHRvbSA9IGhlaWdodCAtIGZvbnRTaXplIC0gNTsKICAgICAgdGhpcy5jb2x1bW4gPSBkYXRhLm1hcChmdW5jdGlvbiAoaXRlbSwgaSkgewogICAgICAgIHZhciBwZXJjZW50ID0gaXRlbS5wZXJjZW50OwogICAgICAgIHZhciBtaWRkbGVYUG9zID0gZ2FwICogKGkgKyAxKTsKICAgICAgICB2YXIgbGVmdFhQb3MgPSBnYXAgKiBpOwogICAgICAgIHZhciByaWdodFhwb3MgPSBnYXAgKiAoaSArIDIpOwogICAgICAgIHZhciBtaWRkbGVZUG9zID0gc3ZnQm90dG9tIC0gdXNlQWJsZUhlaWdodCAqIHBlcmNlbnQ7CiAgICAgICAgdmFyIGNvbnRyb2xZUG9zID0gdXNlQWJsZUhlaWdodCAqIHBlcmNlbnQgKiAwLjYgKyBtaWRkbGVZUG9zOwogICAgICAgIHZhciBkID0gIlxuICAgICAgICAgIE0iLmNvbmNhdChsZWZ0WFBvcywgIiwgIikuY29uY2F0KHN2Z0JvdHRvbSwgIlxuICAgICAgICAgIFEiKS5jb25jYXQobWlkZGxlWFBvcywgIiwgIikuY29uY2F0KGNvbnRyb2xZUG9zLCAiICIpLmNvbmNhdChtaWRkbGVYUG9zLCAiLCIpLmNvbmNhdChtaWRkbGVZUG9zLCAiXG4gICAgICAgICAgTSIpLmNvbmNhdChtaWRkbGVYUG9zLCAiLCIpLmNvbmNhdChtaWRkbGVZUG9zLCAiXG4gICAgICAgICAgUSIpLmNvbmNhdChtaWRkbGVYUG9zLCAiLCAiKS5jb25jYXQoY29udHJvbFlQb3MsICIgIikuY29uY2F0KHJpZ2h0WHBvcywgIiwiKS5jb25jYXQoc3ZnQm90dG9tLCAiXG4gICAgICAgICAgTCIpLmNvbmNhdChsZWZ0WFBvcywgIiwgIikuY29uY2F0KHN2Z0JvdHRvbSwgIlxuICAgICAgICAgIFpcbiAgICAgICAgIik7CiAgICAgICAgdmFyIHRleHRZID0gKHN2Z0JvdHRvbSArIG1pZGRsZVlQb3MpIC8gMiArIGZvbnRTaXplIC8gMjsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBpdGVtKSwge30sIHsKICAgICAgICAgIGQ6IGQsCiAgICAgICAgICB4OiBtaWRkbGVYUG9zLAogICAgICAgICAgeTogbWlkZGxlWVBvcywKICAgICAgICAgIHRleHRZOiB0ZXh0WQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"names":["autoResize","deepMerge","deepClone","name","mixins","props","config","type","Object","default","_default","data","ref","defaultConfig","img","fontSize","imgSideLength","columnColor","textColor","showValue","mergedConfig","column","watch","calcData","methods","afterAutoResizeMixinInit","onResize","mergeConfig","initData","calcSVGPath","sort","_ref","_ref2","a","value","b","max","map","item","_objectSpread","percent","width","height","itemNum","length","gap","useAbleHeight","svgBottom","i","middleXPos","leftXPos","rightXpos","middleYPos","controlYPos","d","concat","textY","x","y"],"sources":["node_modules/@jiaminghi/data-view/lib/components/conicalColumnChart/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-conical-column-chart\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <g\n        v-for=\"(item, i) in column\"\n        :key=\"i\"\n      >\n        <path\n          :d=\"item.d\"\n          :fill=\"mergedConfig.columnColor\"\n        />\n        <text\n          :style=\"`fontSize:${mergedConfig.fontSize}px`\"\n          :fill=\"mergedConfig.textColor\"\n          :x=\"item.x\"\n          :y=\"height - 4\"\n        >\n          {{ item.name }}\n        </text>\n        <image\n          v-if=\"mergedConfig.img.length\"\n          :xlink:href=\"mergedConfig.img[i % mergedConfig.img.length]\"\n          :width=\"mergedConfig.imgSideLength\"\n          :height=\"mergedConfig.imgSideLength\"\n          :x=\"item.x - mergedConfig.imgSideLength / 2\"\n          :y=\"item.y - mergedConfig.imgSideLength\"\n        />\n        <text\n          v-if=\"mergedConfig.showValue\"\n          :style=\"`fontSize:${mergedConfig.fontSize}px`\"\n          :fill=\"mergedConfig.textColor\"\n          :x=\"item.x\"\n          :y=\"item.textY\"\n        >\n          {{ item.value }}\n        </text>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvConicalColumnChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'conical-column-chart',\n\n      defaultConfig: {\n        /**\n         * @description Chart data\n         * @type {Array<Object>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Chart img\n         * @type {Array<String>}\n         * @default img = []\n         */\n        img: [],\n        /**\n         * @description Chart font size\n         * @type {Number}\n         * @default fontSize = 12\n         */\n        fontSize: 12,\n        /**\n         * @description Img side length\n         * @type {Number}\n         * @default imgSideLength = 30\n         */\n        imgSideLength: 30,\n        /**\n         * @description Column color\n         * @type {String}\n         * @default columnColor = 'rgba(0, 194, 255, 0.4)'\n         */\n        columnColor: 'rgba(0, 194, 255, 0.4)',\n        /**\n         * @description Text color\n         * @type {String}\n         * @default textColor = '#fff'\n         */\n        textColor: '#fff',\n        /**\n         * @description Show value\n         * @type {Boolean}\n         * @default showValue = false\n         */\n        showValue: false\n      },\n\n      mergedConfig: null,\n\n      column: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    calcData () {\n      const { mergeConfig, initData, calcSVGPath } = this\n\n      mergeConfig()\n\n      initData()\n\n      calcSVGPath()\n    },\n    mergeConfig () {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    initData () {\n      const { mergedConfig } = this\n      let { data } = mergedConfig\n\n      data = deepClone(data, true)\n\n      data.sort(({ value: a }, { value: b }) => {\n        if (a > b) return -1\n        if (a < b) return 1\n        if (a === b) return 0\n      })\n\n      const max = data[0] ? data[0].value : 10\n\n      data = data.map(item => ({\n        ...item,\n        percent: item.value / max\n      }))\n\n      mergedConfig.data = data\n    },\n    calcSVGPath () {\n      const { mergedConfig, width, height } = this\n\n      const { imgSideLength, fontSize, data } = mergedConfig\n\n      const itemNum = data.length\n      const gap = width / (itemNum + 1)\n\n      const useAbleHeight = height - imgSideLength - fontSize - 5\n      const svgBottom = height - fontSize - 5\n\n      this.column = data.map((item, i) => {\n        const { percent } = item\n\n        const middleXPos = gap * (i + 1)\n        const leftXPos = gap * i\n        const rightXpos = gap * (i + 2)\n\n        const middleYPos = svgBottom - useAbleHeight * percent\n        const controlYPos = useAbleHeight * percent * 0.6 + middleYPos\n\n        const d = `\n          M${leftXPos}, ${svgBottom}\n          Q${middleXPos}, ${controlYPos} ${middleXPos},${middleYPos}\n          M${middleXPos},${middleYPos}\n          Q${middleXPos}, ${controlYPos} ${rightXpos},${svgBottom}\n          L${leftXPos}, ${svgBottom}\n          Z\n        `\n\n        const textY = (svgBottom + middleYPos) / 2 + fontSize / 2\n\n        return {\n          ...item,\n          d,\n          x: middleXPos,\n          y: middleYPos,\n          textY\n        }\n      })\n    }\n  }\n}\n</script>"],"mappings":"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"}]}