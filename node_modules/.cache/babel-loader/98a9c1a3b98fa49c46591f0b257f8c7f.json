{"remainingRequest":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue","mtime":1696499855965},{"path":"F:\\gitee\\chuangsan\\chaoxing\\babel.config.js","mtime":1696499424117},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\babel-loader\\lib\\index.js","mtime":1696499874028},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696499873500},{"path":"F:\\gitee\\chuangsan\\chaoxing\\node_modules\\vue-loader\\lib\\index.js","mtime":1696499870262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["deepMerge","deepClone","randomExtend","getPointDistance","uuid","autoResize","name","mixins","props","config","type","Object","default","_default","dev","Boolean","data","id","ref","unique","Math","random","maskId","concat","maskCircleId","gradientId","gradient2Id","defaultConfig","centerPoint","points","lineWidth","orbitColor","flylineColor","k","curvature","flylineRadius","duration","relative","bgImgUrl","text","offset","color","fontSize","halo","show","radius","centerPointImg","width","height","url","pointsImg","mergedConfig","paths","lengths","times","texts","watch","calcData","methods","afterAutoResizeMixinInit","onResize","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","mergeConfig","createFlylinePaths","calcLineLengths","calcTimes","calcTexts","wrap","_callee$","_context","prev","next","stop","map","item","Array","position","getPath","_ref","_ref2","_ref3","_slicedToArray","x","y","point","center","getControlPoint","controlPoint","_ref4","_ref5","_ref6","sx","sy","_ref7","ex","ey","getKLinePointByx","mx","my","distance","targetLength","disDived","dx","dy","_ref8","_ref9","lx","ly","_this2","_callee2","$nextTick","$refs","_callee2$","_context2","foo","i","getTotalLength","_this$mergedConfig","apply","_toConsumableArray","_ref10","consoleClickPos","_ref11","offsetX","offsetY","relativeX","toFixed","relativeY","console","warn"],"sources":["node_modules/@jiaminghi/data-view/lib/components/flylineChart/src/main.vue"],"sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart\"\n    ref=\"dv-flyline-chart\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"mergedConfig\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"gradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"gradient2Id\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n\n        <circle\n          v-if=\"paths[0]\"\n          :id=\"`circle${paths[0].toString()}`\"\n          :cx=\"paths[0][2][0]\"\n          :cy=\"paths[0][2][1]\"\n        >\n          <animate\n            attributeName=\"r\"\n            :values=\"`1;${mergedConfig.halo.radius}`\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            values=\"1;0\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </defs>\n\n      <image\n        v-if=\"paths[0]\"\n        :xlink:href=\"mergedConfig.centerPointImg.url\"\n        :width=\"mergedConfig.centerPointImg.width\"\n        :height=\"mergedConfig.centerPointImg.height\"\n        :x=\"paths[0][2][0] - mergedConfig.centerPointImg.width / 2\"\n        :y=\"paths[0][2][1] - mergedConfig.centerPointImg.height / 2\"\n      />\n\n      <mask :id=\"`maskhalo${paths[0].toString()}`\">\n        <use\n          v-if=\"paths[0]\"\n          :xlink:href=\"`#circle${paths[0].toString()}`\"\n          :fill=\"`url(#${gradient2Id})`\"\n        />\n      </mask>\n\n      <use\n        v-if=\"paths[0] && mergedConfig.halo.show\"\n        :xlink:href=\"`#circle${paths[0].toString()}`\"\n        :fill=\"mergedConfig.halo.color\"\n        :mask=\"`url(#maskhalo${paths[0].toString()})`\"\n      />\n\n      <g\n        v-for=\"(path, i) in paths\"\n        :key=\"i\"\n      >\n        <defs>\n          <path\n            :id=\"`path${path.toString()}`\"\n            :ref=\"`path${i}`\"\n            :d=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <use\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.orbitColor\"\n        />\n\n        <use\n          v-if=\"lengths[i]\"\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.flylineColor\"\n          :mask=\"`url(#mask${unique}${path.toString()})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${lengths[i]}`\"\n            :to=\"`${lengths[i]}, 0`\"\n            :dur=\"times[i] || 0\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n\n        <mask :id=\"`mask${unique}${path.toString()}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"mergedConfig.flylineRadius\" :fill=\"`url(#${gradientId})`\">\n            <animateMotion\n              :dur=\"times[i] || 0\"\n              :path=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <image\n          :xlink:href=\"mergedConfig.pointsImg.url\"\n          :width=\"mergedConfig.pointsImg.width\"\n          :height=\"mergedConfig.pointsImg.height\"\n          :x=\"path[0][0] - mergedConfig.pointsImg.width / 2\"\n          :y=\"path[0][1] - mergedConfig.pointsImg.height / 2\"\n        />\n\n        <text\n          :style=\"`fontSize:${mergedConfig.text.fontSize}px;`\"\n          :fill=\"mergedConfig.text.color\"\n          :x=\"path[0][0] + mergedConfig.text.offset[0]\"\n          :y=\"path[0][1] + mergedConfig.text.offset[1]\"\n        >\n          {{ texts[i] }}\n        </text>\n\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'dv-flyline-chart',\n      unique: Math.random(),\n      maskId: `flyline-mask-id-${id}`,\n      maskCircleId: `mask-circle-id-${id}`,\n      gradientId: `gradient-id-${id}`,\n      gradient2Id: `gradient2-id-${id}`,\n\n      defaultConfig: {\n        /**\n         * @description Flyline chart center point\n         * @type {Array<Number>}\n         * @default centerPoint = [0, 0]\n         */\n        centerPoint: [0, 0],\n        /**\n         * @description Flyline start points\n         * @type {Array<Array<Number>>}\n         * @default points = []\n         * @example points = [[10, 10], [100, 100]]\n         */\n        points: [],\n        /**\n         * @description Flyline width\n         * @type {Number}\n         * @default lineWidth = 1\n         */\n        lineWidth: 1,\n        /**\n         * @description Orbit color\n         * @type {String}\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\n         */\n        orbitColor: 'rgba(103, 224, 227, .2)',\n        /**\n         * @description Flyline color\n         * @type {String}\n         * @default orbitColor = '#ffde93'\n         */\n        flylineColor: '#ffde93',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Flyline radius\n         * @type {Number}\n         * @default flylineRadius = 100\n         */\n        flylineRadius: 100,\n        /**\n         * @description Flyline animation duration\n         * @type {Array<Number>}\n         * @default duration = [20, 30]\n         */\n        duration: [20, 30],\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true,\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgUrl = ''\n         * @example bgImgUrl = './img/bg.jpg'\n         */\n        bgImgUrl: '',\n        /**\n         * @description Text configuration\n         * @type {Object}\n         */\n        text: {\n          /**\n           * @description Text offset\n           * @type {Array<Number>}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Halo configuration\n         * @type {Object}\n         */\n        halo: {\n          /**\n           * @description Weather to show halo\n           * @type {Boolean}\n           * @default show = true\n           * @example show = true | false\n           */\n          show: true,\n          /**\n           * @description Halo animation duration (10 = 1s)\n           * @type {Number}\n           * @default duration = 30\n           */\n          duration: 30,\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo max radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Center point img configuration\n         * @type {Object}\n         */\n        centerPointImg: {\n          /**\n           * @description Center point img width\n           * @type {Number}\n           * @default width = 40\n           */\n          width: 40,\n          /**\n           * @description Center point img height\n           * @type {Number}\n           * @default height = 40\n           */\n          height: 40,\n          /**\n           * @description Center point img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        },\n        /**\n         * @description Points img configuration\n         * @type {Object}\n         * @default radius = 120\n         */\n        pointsImg: {\n          /**\n           * @description Points img width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Points img height\n           * @type {Number}\n           * @default height = 15\n           */\n          height: 15,\n          /**\n           * @description Points img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        }\n      },\n\n      mergedConfig: null,\n\n      paths: [],\n      lengths: [],\n      times: [],\n      texts: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, createFlylinePaths, calcLineLengths } = this\n\n      mergeConfig()\n\n      createFlylinePaths()\n\n      await calcLineLengths()\n\n      const { calcTimes, calcTexts } = this\n\n      calcTimes()\n\n      calcTexts()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        if (item instanceof Array) {\n          return { position: item, text: '' }\n        }\n\n        return item\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    createFlylinePaths () {\n      const { getPath, mergedConfig, width, height } = this\n\n      let { centerPoint, points, relative } = mergedConfig\n\n      points = points.map(({ position }) => position)\n\n      if (relative) {\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]]\n        points = points.map(([x, y]) => [width * x, height * y])\n      }\n\n      this.paths = points.map(point => getPath(centerPoint, point))\n    },\n    getPath (center, point) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(center, point)\n\n      return [point, controlPoint, center]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, paths, $refs } = this\n\n      await $nextTick()\n\n      this.lengths = paths.map((foo, i) => $refs[`path${i}`][0].getTotalLength())\n    },\n    calcTimes () {\n      const { duration, points } = this.mergedConfig\n\n      this.times = points.map(foo => randomExtend(...duration) / 10)\n    },\n    calcTexts () {\n      const { points } = this.mergedConfig\n\n      this.texts = points.map(({ text }) => text)\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"],"mappings":"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"}]}